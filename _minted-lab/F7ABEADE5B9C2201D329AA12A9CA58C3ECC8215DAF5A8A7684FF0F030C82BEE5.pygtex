\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{pub}\PYG{+w}{ }\PYG{k}{type} \PYG{n+nc}{TokenId}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nb}{String}\PYG{p}{;}

\PYG{c+cp}{\PYGZsh{}[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize, Clone)]}
\PYG{c+cp}{\PYGZsh{}[serde(crate = }\PYG{l+s}{\PYGZdq{}near\PYGZus{}sdk::serde\PYGZdq{}}\PYG{c+cp}{)]}
\PYG{k}{pub}\PYG{+w}{ }\PYG{k}{struct} \PYG{n+nc}{NFTContractMetadata}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{spec}: \PYG{n+nb}{String}\PYG{p}{,}\PYG{+w}{                                           }\PYG{c+cm}{/*  REQUIRED (version like \PYGZdq{}nft\PYGZhy{}1.0.0\PYGZdq{}) */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{name}: \PYG{n+nb}{String}\PYG{p}{,}\PYG{+w}{                                           }\PYG{c+cm}{/*  REQUIRED (like \PYGZdq{}Maxim\PYGZdq{})  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{symbol}: \PYG{n+nb}{String}\PYG{p}{,}\PYG{+w}{                                         }\PYG{c+cm}{/*  REQUIRED (like like \PYGZdq{}MOCHI\PYGZdq{} or \PYGZdq{}MV3\PYGZdq{})  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{icon}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                   }\PYG{c+cm}{/*  small image associated with this contract (Data URL)  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{base\PYGZus{}uri}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                               }\PYG{c+cm}{/*  Centralized gateway known to have reliable access to}
\PYG{c+cm}{                                                                    decentralized storage assets referenced by `reference` or `media` URLs  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{reference}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                              }\PYG{c+cm}{/*  URL to a JSON file with more infoa link to a valid JSON file containing}
\PYG{c+cm}{                                                                    various keys offering supplementary details on the token  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{reference\PYGZus{}hash}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n}{Base64VecU8}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                    }\PYG{c+cm}{/*  Base64\PYGZhy{}encoded sha256 hash of JSON from reference field. Required if `reference` is included.  */}
\PYG{p}{\PYGZcb{}}

\PYG{c+cp}{\PYGZsh{}[derive(BorshDeserialize, BorshSerialize, Serialize, Deserialize)]}
\PYG{c+cp}{\PYGZsh{}[serde(crate = }\PYG{l+s}{\PYGZdq{}near\PYGZus{}sdk::serde\PYGZdq{}}\PYG{c+cp}{)]}
\PYG{k}{pub}\PYG{+w}{ }\PYG{k}{struct} \PYG{n+nc}{TokenMetadata}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{title}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                  }\PYG{c+cm}{/*  ex. \PYGZdq{}Arch Nemesis: Mail Carrier\PYGZdq{} or \PYGZdq{}Parcel \PYGZsh{}5055\PYGZdq{}  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{description}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                            }\PYG{c+cm}{/*  free\PYGZhy{}form description  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{media}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                  }\PYG{c+cm}{/*  URL to associated media, preferably to decentralized, content\PYGZhy{}addressed storage  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{media\PYGZus{}hash}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n}{Base64VecU8}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                        }\PYG{c+cm}{/*  Base64\PYGZhy{}encoded sha256 hash of content referenced by the `media` field. Required if `media` is included.  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{copies}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{u64}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                    }\PYG{c+cm}{/*  number of copies of this set of metadata in existence when token was minted.  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{issued\PYGZus{}at}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{u64}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                 }\PYG{c+cm}{/*  When token was issued or minted, Unix epoch in milliseconds  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{expires\PYGZus{}at}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{u64}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                }\PYG{c+cm}{/*  When token expires, Unix epoch in milliseconds  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{starts\PYGZus{}at}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{u64}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                 }\PYG{c+cm}{/*  When token starts being valid, Unix epoch in milliseconds  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{updated\PYGZus{}at}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{u64}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                }\PYG{c+cm}{/*  When token was last updated, Unix epoch in milliseconds  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{extra}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                                  }\PYG{c+cm}{/*  anything extra the NFT wants to store on\PYGZhy{}chain. Can be stringified JSON.  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{reference}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n+nb}{String}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                              }\PYG{c+cm}{/*  URL to an off\PYGZhy{}chain JSON file with more info.  */}

\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{reference\PYGZus{}hash}: \PYG{n+nb}{Option}\PYG{o}{\PYGZlt{}}\PYG{n}{Base64VecU8}\PYG{o}{\PYGZgt{}}\PYG{p}{,}\PYG{+w}{                    }\PYG{c+cm}{/*  Base64\PYGZhy{}encoded sha256 hash of JSON from reference field. Required if `reference` is included.  */}
\PYG{p}{\PYGZcb{}}

\PYG{c+cp}{\PYGZsh{}[derive(BorshDeserialize, BorshSerialize)]}
\PYG{k}{pub}\PYG{+w}{ }\PYG{k}{struct} \PYG{n+nc}{Token}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{owner\PYGZus{}id}: \PYG{n+nc}{AccountId}\PYG{p}{,}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{next\PYGZus{}approval\PYGZus{}id}: \PYG{k+kt}{u64}\PYG{p}{,}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{approved\PYGZus{}account\PYGZus{}ids}: \PYG{n+nc}{HashMap}\PYG{o}{\PYGZlt{}}\PYG{n}{AccountId}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{u64}\PYG{o}{\PYGZgt{}}\PYG{p}{,}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{royalty}: \PYG{n+nc}{HashMap}\PYG{o}{\PYGZlt{}}\PYG{n}{AccountId}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{u32}\PYG{o}{\PYGZgt{}}
\PYG{p}{\PYGZcb{}}

\PYG{c+cm}{/* Struct that which can be requested via view call */}
\PYG{c+cp}{\PYGZsh{}[derive(Serialize, Deserialize)]}
\PYG{c+cp}{\PYGZsh{}[serde(crate = }\PYG{l+s}{\PYGZdq{}near\PYGZus{}sdk::serde\PYGZdq{}}\PYG{c+cp}{)]}
\PYG{k}{pub}\PYG{+w}{ }\PYG{k}{struct} \PYG{n+nc}{JsonToken}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{token\PYGZus{}id}: \PYG{n+nc}{TokenId}\PYG{p}{,}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{owner\PYGZus{}id}: \PYG{n+nc}{AccountId}\PYG{p}{,}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{metadata}: \PYG{n+nc}{TokenMetadata}\PYG{p}{,}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{approved\PYGZus{}account\PYGZus{}ids}: \PYG{n+nc}{HashMap}\PYG{o}{\PYGZlt{}}\PYG{n}{AccountId}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{u64}\PYG{o}{\PYGZgt{}}\PYG{p}{,}
\PYG{+w}{    }\PYG{k}{pub}\PYG{+w}{ }\PYG{n}{royalty}: \PYG{n+nc}{HashMap}\PYG{o}{\PYGZlt{}}\PYG{n}{AccountId}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{u32}\PYG{o}{\PYGZgt{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
